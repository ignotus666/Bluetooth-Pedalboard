Ver 1.13:

- Changed platform to Atmega1284p.
- Added Tuner and Mute MIDI notes activated via long press of the looper and stomp mode buttons.
- Uses Neopixel strips instead of regular LEDs, with changes of colours associated with different functions.
- Improved battery monitoring and added battery uptime counter to keep track of how long batteries last.
- Improved analogue pedal handling.
- A bunch of code changes to adapt to the new platform.

Ver 1.01:

- Made hall effect pedal output more linear.

Ver 1.00:

- Fixed an issue where the battery charge was often not being displayed accurately at all, rendering it useless.
- Added a coloured bar under the wah/volume (green/yellow) icon to better distinguish which is active.
- Resized wah icon to make it smaller. Memory usage was causing scrambled characters.

Ver 0.99:

- Added the possibility of changing the control number of the expression pedal by long-pressing the bankUp switch. Toggles
between control number 0 (wah) and 1 (volume).

Ver 0.98:

- It doesn't make much sense to calibrate an expression pedal by having to press it before it has been calibrated...
Back to pressing switches 3 and 4 to enter calibration mode.

Ver 0.97:

- Changed how to cycle through pedalboard bank, MIDI bank up/down and MIDI preset up/down change modes. Now it's using long
press of switch 7 (keyPressed[6]) instead of depressed expression pedal + switch 7. It's very unpractical to step on an
expression pedal and press a switch with the other foot unless sitting down. Long press is much more convenient.

Ver 0.96:

- Rearranged some code, added countdown for expression pedal calibration, changed some colours to distinguish between
modes (preset and looper modes had same colour schemes and similar layouts, leading to me often confusing them).


Ver 0.95:

- Cleaned up a bit more code and fixed a persistent bug where exiting stomp/loop mode after booting kept returning to preset 30.
After some extensive testing I reckon it's pretty much bug-free at this point.


Ver 0.94:

- Fixed calibration mode that was broken in previous version. Calibration mode is now activated by pressing the expression
pedal and button 4 (keyPressed[3]). Sorted out a couple of other bugs.


Ver 0.93:

- Another push to get rid of redundant code and make it more readable (within my limited abilities...). Added more
comments to explain what's happening. Adding more banks is much less complex now and comments are added to the lines where changes
would be necessary. Changing preset names is also clearer as they are all grouped together in arrays.

- Fixed a few bugs related to LEDs and active presets being on/off when they shouldn't when switching between modes.


Ver 0.92:

- Got rid of a few more hundred lines of code. Corrected bug in calibration mode.


Ver 0.91:

- Added 'calibration mode'. Pressing buttons 3 and 4 simultaneously puts the pedalboard into calibration mode and gives you
5 seconds to move the pedal across its range at least once to get min and max levels. These levels are stored in eeprom so
calibration should only need to be performed once.

- Some more tidying up of code.


Ver 0.90:

- Made some major changes to code, using arrays for lots more things. Managed to get rid of almost 800 lines of redundant
code... Probably lots more could be improved but it's a learning process. Also combined all .bmp images into one file; no
need to have them scattered all over the place.
- Fixed a couple of bugs.


...


Ver 0.86:

- Cleaned up code a bit with arrays for LEDs and some other minor stuff (learning slowly...).
- Added wah .bmp icon to replace arc. Redrawing the arc every time the wah value changed caused a gap between each MIDI note
sent, meaning that a fast transition only sent a handful of MIDI values. It now sends a faster stream of values making it more
accurate.
- Added battery icon to replace arc.
- Reduced number of preset banks to 5. I have no need for that many presets so for now it's staying at 5 banks.
- Changed MIDI activity LED code to not use delay(). Should also help slightly with wah CC stream speed and accuracy.


...


Ver 0.81:

- Added ResponsiveAnalogRead library for the hall sensor expression pedal. When on battery power the output was very jittery;
this library fixes the issue entirely. AnalogSmooth is good for the battery readings (lots of readings over a longer timespan)
but not so good for returning values quickly. Likewise, ResponsiveAnalogRead isn't good for averaging readings over longer
periods.


...


ver 0.75:
- Implemented button debounce code and got rid of (almost) all delays. Switches no longer cycle through states or
repeatedly send MIDI messages if accidentally held down for too long.

- Made Loop Mode functions more adequately reflect the behaviour of Sooperlooper. LEDs now blink when an operation is active
and then default to 'Play' when pressed again.


ver 0.74:
- Added MIDI activity display using the 'Pedalboard mode' and 'Loop mode' LEDs. Whenever a MIDI message is sent one of these
LEDs flickers. If 'Pedalboard mode' is not activated, its LED is used; if it's active, the 'Loop mode' LED is used. Useful for
debugging - if a pot isn't connected properly somewhere or they're picking up noise, this gives you visual feeback.


ver 0.73:
- Cleaned up some code.


ver 0.72:
- Some changes to code.
- (Replaces new function in ver 0.70): When in preset mode, by pressing the expression pedal + bankDown you can scroll through
3 different functions for the bankUp and bankDown buttons. In default mode they scroll through the pedalboard's banks (no MIDI
sent). The next function sets them to send MIDI messages for 'Next Bank' and 'Previous Bank'. The last function sends MIDI
messages for 'Next Preset' and 'Previous Preset'.


ver 0.71:
- Fixed some bugs.


ver 0.70:
- Added possibility of sending additional MIDI events by pressing expression pedal + pushing bankUp and bankDown buttons.
Can be used to scroll through banks in software that uses them (TH-U or others) or as next/previous preset.


ver 0.69:
- Some code optimisation.
- Preset names changed via find/replace will automatically be displayed in the right position without the need to modify
screen coordinates.
